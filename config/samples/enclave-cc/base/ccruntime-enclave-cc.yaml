apiVersion: confidentialcontainers.org/v1beta1
kind: CcRuntime
metadata:
  name: ccruntime-enclave-cc
spec:
  runtimeName: enclave-cc
  ccNodeSelector:
    matchLabels:
      node.kubernetes.io/worker: ""
  config:
    installType: bundle
    payloadImage: quay.io/confidential-containers/runtime-payload-ci:enclave-cc-HW-cc-kbc-latest
    installDoneLabel:
      confidentialcontainers.org/enclave-cc: "true"
    uninstallDoneLabel:
      confidentialcontainers.org/enclave-cc: "cleanup"
    installerVolumeMounts:
      - mountPath: /etc/containerd/
        name: containerd-conf
      - mountPath: /etc/enclave-cc/
        name: enclave-cc-conf
      - mountPath: /opt/confidential-containers/
        name: enclave-cc-artifacts
      - mountPath: /usr/local/bin/
        name: local-bin
    installerVolumes:
      - hostPath:
          path: /etc/containerd/
          type: ""
        name: containerd-conf
      - hostPath:
          path: /etc/enclave-cc/
          type: DirectoryOrCreate
        name: enclave-cc-conf
      - hostPath:
          path: /opt/confidential-containers/
          type: DirectoryOrCreate
        name: enclave-cc-artifacts
      - hostPath:
          path: /usr/local/bin/
          type: ""
        name: local-bin
    installCmd: ["/opt/enclave-cc-artifacts/scripts/enclave-cc-deploy.sh", "install"]
    uninstallCmd: ["/opt/enclave-cc-artifacts/scripts/enclave-cc-deploy.sh", "cleanup"]
    cleanupCmd: ["/opt/enclave-cc-artifacts/scripts/enclave-cc-deploy.sh", "reset"]
    runtimeClasses:
    - name: "enclave-cc"
      snapshotter: "overlayfs"
      pulltype: ""
    postUninstall:
      image: quay.io/confidential-containers/reqs-payload
      volumeMounts:
        - mountPath: /opt/confidential-containers/
          name: confidential-containers-artifacts
        - mountPath: /etc/systemd/system/
          name: etc-systemd-system
        - mountPath: /etc/containerd/
          name: containerd-conf
        - mountPath: /usr/local/bin/
          name: local-bin
        - mountPath: /var/lib/containerd-nydus/
          name: containerd-nydus
      volumes:
        - hostPath:
            path: /opt/confidential-containers/
            type: DirectoryOrCreate
          name: confidential-containers-artifacts
        - hostPath:
            path: /etc/containerd/
            type: ""
          name: containerd-conf
        - hostPath:
            path: /etc/systemd/system/
            type: ""
          name: etc-systemd-system
        - hostPath:
            path: /usr/local/bin/
            type: ""
          name: local-bin
        - hostPath:
            path: /var/lib/containerd-nydus/
            type: ""
          name: containerd-nydus
      environmentVariables:
        # If set to true, this will install the CoCo fork of the containerd on the node.
        # default: true
        - name: "INSTALL_COCO_CONTAINERD"
          value: "true"
        # If set to true, this will install the v1.7.0 release of containerd on the node.
        # default: false
        - name: "INSTALL_OFFICIAL_CONTAINERD"
          value: "false"
        # If set to true, this will install the CoCo fork of the containerd,
        # the one that has patches for handling GPU / VFIO, on the node
        # default: false
        - name: "INSTALL_VFIO_GPU_CONTAINERD"
          value: "false"
        # If set to true, this will install nydus-snapshotter and nydus-image
        # on the node
        # default: false
        - name: "INSTALL_NYDUS_SNAPSHOTTER"
          value: "false"
    preInstall:
      image: quay.io/confidential-containers/reqs-payload
      volumeMounts:
        - mountPath: /opt/confidential-containers/
          name: confidential-containers-artifacts
        - mountPath: /etc/systemd/system/
          name: etc-systemd-system
        - mountPath: /etc/containerd/
          name: containerd-conf
        - mountPath: /usr/local/bin/
          name: local-bin
        - mountPath: /var/lib/containerd-nydus/
          name: containerd-nydus
      volumes:
        - hostPath:
            path: /opt/confidential-containers/
            type: DirectoryOrCreate
          name: confidential-containers-artifacts
        - hostPath:
            path: /etc/systemd/system/
            type: ""
          name: etc-systemd-system
        - hostPath:
            path: /etc/containerd/
            type: ""
          name: containerd-conf
        - hostPath:
            path: /usr/local/bin/
            type: ""
          name: local-bin
        - hostPath:
            path: /var/lib/containerd-nydus/
            type: ""
          name: containerd-nydus
      environmentVariables:
        # If set to true, this will install the CoCo fork of the containerd on the node.
        # default: true
        - name: "INSTALL_COCO_CONTAINERD"
          value: "true"
        # If set to true, this will install the v1.7.0 release of containerd on the node.
        # default: false
        - name: "INSTALL_OFFICIAL_CONTAINERD"
          value: "false"
        # If set to true, this will install the CoCo fork of the containerd,
        # the one that has patches for handling GPU / VFIO, on the node
        # default: false
        - name: "INSTALL_VFIO_GPU_CONTAINERD"
          value: "false"
        # If set to true, this will install nydus-snapshotter and nydus-image
        # on the node
        # default: false
        - name: "INSTALL_NYDUS_SNAPSHOTTER"
          value: "false"
    environmentVariables:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: "CONFIGURE_CC"
        value: "yes"
      - name: "DECRYPT_CONFIG"
        value: "ewogICAgImtleV9wcm92aWRlciI6ICJwcm92aWRlcjphdHRlc3RhdGlvbi1hZ2VudDpzYW1wbGVfa2JjOjoxMjcuMC4wLjE6NTAwMDAiLAogICAgInNlY3VyaXR5X3ZhbGlkYXRlIjogZmFsc2UKfQo="
      - name: "OCICRYPT_CONFIG"
        value: "ewogICAgImtleS1wcm92aWRlcnMiOiB7CiAgICAgICAgImF0dGVzdGF0aW9uLWFnZW50IjogewogICAgICAgICAgICAibmF0aXZlIjogImF0dGVzdGF0aW9uLWFnZW50IgogICAgICAgIH0KICAgIH0KfQo="
