name: enclave-cc e2e tests
on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  e2e:
    name: operator enclave-cc e2e tests
    runs-on: ubuntu-22.04
    services:
      registry:
        image: registry:2
        options: --name registry
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
        with:
          driver-opts: network=host

      - name: Build and push the operator image to local registry
        run: |
          make docker-build
          make docker-push
        env:
          IMG: localhost:5000/cc-operator:latest

      - name: Build and push the pre-install to local registry
        run: |
          pushd install/pre-install-payload
          make reqs-image registry="${REGISTRY}" extra_docker_manifest_flags="--insecure"
          popd
        env:
          REGISTRY: localhost:5000/reqs-payload

      - name: Setup kind cluster
        run: |
          kind create cluster --image "kindest/node:v1.32.0@sha256:c48c62eac5da28cdadcf560d1d8616cfa6783b58f0d94cf63ad1bf49600cb027" -n coco-sgx --config tests/e2e/enclave-cc-kind-config.yaml --wait 120s
          kubectl label node coco-sgx-worker node.kubernetes.io/worker=
          docker network connect kind registry

      - name: Deploy operator from the local registry
        run: |
          cd config/default
          kustomize edit set image quay.io/confidential-containers/operator=localhost:5000/cc-operator:latest
          kubectl apply -k .
          sleep 1
          kubectl wait --for=jsonpath='{.status.conditions[0].status}'=True deployments/cc-operator-controller-manager -n confidential-containers-system
          img=$(kubectl get deployments/cc-operator-controller-manager -n confidential-containers-system -o jsonpath='{.spec.template.spec.containers[?(@.name == "manager")].image}')
          [ "${img}" = "localhost:5000/cc-operator:latest" ]

      - name: Install enclave-cc sim
        run: |
          cd config/samples/enclave-cc/sim
          kustomize edit set image quay.io/confidential-containers/reqs-payload=localhost:5000/reqs-payload:latest
          kubectl apply -k . 
          sleep 1
          kubectl wait --for=jsonpath='{.status.runtimeClass}'=enclave-cc ccruntime/ccruntime-enclave-cc-sgx-mode-sim --timeout=90s

      - name: Deploy sample workload
        run: |
          kubectl apply -f tests/e2e/enclave-cc-pod-sim.yaml
          kubectl wait --for=condition=Ready pod/enclave-cc-pod-sim
